#include <stdio.h>
#include <stdlib.h>

int comparator(const void * a, const void * b);
int secondMax(const int* arr, size_t n, int* secondMax);

int main()
{
    int scMax = 0;

    int arr[] = {10, 20, 31, -5, 59, -12, 13, 12};
    size_t arrSize = sizeof(arr) / sizeof(arr[0]);

    int res = secondMax(arr, arrSize, &scMax);

    if(res == 1) {
        printf("There is no elements in the array\n");
       } else if(res == 2) {
        printf("There is only one array in the array\n");
       } else if(res == 3) {
           printf("All elements in the array are equal\n");
       } else {
        printf("%d", scMax);
       }

    return 0;
}

int secondMax(const int* arr, size_t n, int* secondMax){
    if(n == 0) {
        return 1;
    }
    if(n == 1) {
        return 2;
    }
    int max = *(arr);
    for(int i = 1; i < n; i++) {
        max = max < *(arr + i) ? *(arr + i) : max;
    }

    int equality = 0;
    for(int i = 0; i < n; i++) {
        if(max == *(arr + i)) {
            equality++;
        }
    }

    if(equality == n) {
        return 3;
    }

    qsort(arr, n, sizeof(int), comparator);
    *secondMax = *(arr + 1);
    return 0;
}

int comparator(const void * a, const void * b) {
    return *((int*)a) - *((int*)b);
}